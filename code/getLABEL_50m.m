clear, clc, close

%% load the rasterized network data
[n, nR] = readgeoraster(['C:\Desktop\AI4ER\03 - MRes\Easter 2023\' ...
    'MRes Project\resolution_study\railyway_rasterized_50m.tif']);
n = sparse(1.*(n>0)); %binary: 0 - no railway/road, 1 - with railway/road

%% load the location of landslide incidents
ls = readtable(['C:\Desktop\AI4ER\03 - MRes\Easter 2023\' ...
    'MRes Project\ArcticCCAM\data\landslide_incidents\' ...
    'landslide_incidents_1747_near_railway_addXY.xlsx']);

% compute layer extent for each landslide incident
width = 5000; %5km box
res = 50; %50m resolution
x_min = nR.XWorldLimits(1);
x_max = nR.XWorldLimits(2);
y_min = nR.YWorldLimits(1);
y_max = nR.YWorldLimits(2);

x_fromleft = round((ls.x - x_min)./res,0);
y_fromtop = round((y_max - ls.y)./res,0);

%% get labels in terms of distance from the incident
load(['C:\Desktop\AI4ER\03 - MRes\Easter 2023\MRes Project\' ...
    'ArcticCCAM\data\landslide_incidents\' ...
    'validindices_equallyrepresented.mat'])
outputpath = ['C:\Desktop\AI4ER\03 - MRes\Easter 2023\MRes Project\' ...
    'ArcticCCAM\data\landslide_incidents\equallyrepresented'];
adjpath = ['C:\Desktop\AI4ER\03 - MRes\Easter 2023\MRes Project\' ...
    'ArcticCCAM\data\road_network\graphData_railway_equallyrepresented'];

tic
for k = 1:numel(fid_f)
    disp(k*100/numel(fid_f))

    load(adjpath+"\"+string(fid_f(k))+".mat")
    i = find(ls.fid==fid_f(k));
    il = x_fromleft(i) - (dw_f(k) / res / 2);
    ir = x_fromleft(i) + ((dw_f(k) / res / 2) - 1);
    ir = (il < 1) .* (dw_f(k) / res) + ...
         (ir > (x_max-x_min)/res) .* (x_max-x_min)/res + ...
         ir;
    il = (il < 1) .* 1 + ...
         (ir > (x_max-x_min)/res) .* ((x_max-x_min)/res-(dw_f(k)/res)+1) + ...
         il;
    it = y_fromtop(i) - (dh_f(k) / res / 2);
    ib = y_fromtop(i) + ((dh_f(k) / res / 2) - 1);
    ib = (it < 1) .* (dh_f(k) / res) + ...
         (ib > (y_max-y_min)/res) .* (y_max-y_min)/res + ...
         ib;
    it = (it < 1) .* 1 + ...
         (ib > (y_max-y_min)/res) .* ((y_max-y_min)/res-(dh_f(k)/res)+1) + ...
         it;
    n_sub = n(int64(it):int64(ib),int64(il):int64(ir));
    idx = find(n_sub == 1);
    row = zeros(numel(idx),1);
    col = zeros(numel(idx),1);
    for m = 1:numel(idx) 
        [row(m,1), col(m,1)] =  ind2sub(size(n_sub),idx(m));
    end
    col_x = x_min + (il+col-0.5).*(res);
    row_y = y_max - (it+row-1.0).*(res);
    distance = sqrt((col_x-repmat(ls.x(i),[numel(col_x) 1])).^2+...
                (row_y-repmat(ls.y(i),[numel(row_y) 1])).^2);

    rng_label =     (distance<=85).*1 + ...
                    (distance==385).*0 + ...
                    ((distance<385)&(distance>85)).*(385-distance)./300;
    two_label =     (rng_label<1).*1 + ...
                    (rng_label>=1).*2;
    three_label =   (rng_label<=0.33).*1 + ...
                    ((rng_label>0.33)&(rng_label<=0.67)).*2 + ...
                    ((rng_label>0.67)&(rng_label<=1)).*3;
    four_label =    (rng_label<=0.25).*1 + ...
                    ((rng_label>0.25)&(rng_label<=0.5)).*2 + ...
                    ((rng_label>0.50)&(rng_label<=0.75)).*3 + ...
                    ((rng_label>0.75)&(rng_label<=1)).*4;
    five_label =    (rng_label<=0.2).*1 + ...
                    ((rng_label>0.2)&(rng_label<=0.4)).*2 + ...
                    ((rng_label>0.4)&(rng_label<=0.6)).*3 + ...
                    ((rng_label>0.6)&(rng_label<=0.8)).*4 + ...
                    ((rng_label>0.8)&(rng_label<=1)).*5;
    six_label =     (rng_label<=1/6).*1 + ...
                    ((rng_label>1/6)&(rng_label<=2/6)).*2 + ...
                    ((rng_label>2/6)&(rng_label<=3/6)).*3 + ...
                    ((rng_label>3/6)&(rng_label<=4/6)).*4 + ...
                    ((rng_label>4/6)&(rng_label<=5/6)).*5 + ...
                    ((rng_label>5/6)&(rng_label<=1)).*6;

    m = matfile(outputpath+"\"+string(fid_f(k))+"label.mat",'writable',true);
    m.col_x = col_x;
    m.row_y = row_y;
    m.distance = distance;
    m.rng_label = rng_label;
    m.two_label = two_label;
    m.three_label = three_label;
    m.four_label = four_label;
    m.five_label = five_label;
    m.six_label = six_label;
    toc
end
toc